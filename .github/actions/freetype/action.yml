name: build_freetype
description: 'Build FreeType library'

inputs:
  release:
    description: 'Project directory with sources'
    required: true
    default: '2.12.1'
  cmake_generator:
    description: 'Makefile generator used by CMake'
    required: true
    default: 'Unix Makefiles'

runs:
  using: "composite"

  steps:

    - name: FreeType - Unix - Build
      if: inputs.cmake_generator == 'Unix Makefiles'
      run: |
        echo '### download ###'
        cd ~
        wget https://download.savannah.gnu.org/releases/freetype/freetype-${{inputs.release}}.tar.xz
        tar xf *.tar.xz
        mv ./freetype-${{inputs.release}} ./freetype
        tree ./freetype
        echo '### configure ###'
        cd "./freetype"
        ./configure CFLAGS='-m64 -fPIC' CPPFLAGS='-m64 -fPIC' --with-zlib=no --with-bzip2=no --with-png=no --with-harfbuzz=no --with-brotli=no        
        echo '### compile ###'
        make -j 8
        echo '### install ###'
        sudo make install
        echo '### include dir ###'
        cd /usr/local/include/freetype2
        pwd
        ls -d */
        ls -c -ltd -- *ft*
        echo '### lib dir ###'
        cd /usr/local/lib
        pwd
        ls -d */
        ls -c -ltd -- *freetype*
      shell: bash

    - name: FreeType - MinGW - Build
      if: inputs.cmake_generator == 'MinGW Makefiles'
      run: |
        echo '### download ###'
        cd ~
        wget https://download.savannah.gnu.org/releases/freetype/freetype-${{inputs.release}}.tar.xz
        tar xf *.tar.xz
        mv ./freetype-${{inputs.release}} ./freetype
        echo '### configure ###'
        cd "./freetype"
        ./configure CFLAGS='-m64 -fPIC' CPPFLAGS='-m64 -fPIC' --with-zlib=no --with-bzip2=no --with-png=no --with-harfbuzz=no --with-brotli=no        
        echo '### compile ###'
        make -j 8
        echo '### install ###'
        make install
        echo '### include dir ###'
        cd /mingw64/include/freetype2
        cygpath -w /mingw64/include
        pwd
        ls -d */
        ls -c -ltd -- *ft*
        echo '### lib dir ###'
        cd /mingw64/lib/
        cygpath -w /mingw64/lib
        pwd
        ls -d */
        ls -c -ltd -- *freetype*
        cd '/mingw64/bin'
        cp ./libfreetype-6.dll ./libfreetype.dll 
        ls -l
        tree .
      shell: msys2 {0}

    - name: FreeType - VS17 - Dowload
      if: inputs.cmake_generator == 'Visual Studio 17 2022'
      run: |
        echo '### download ###'
        cd ~
        Invoke-WebRequest -Uri 'https://download.savannah.gnu.org/releases/freetype/freetype-${{inputs.release}}.tar.xz' -outfile './freetype.tar.xz'
        echo '### unzip ###'
        7z x './freetype.tar.xz' 
        7z x './freetype.tar'
        mv -Path './freetype-${{inputs.release}}' -Destination './freetype'
        echo '### compile ###'
        (get-command MSBuild).Path
        MSBuild.exe -p:Configuration='Release' -p:Platform=x64 ./freetype/builds/windows/vc2010/freetype.vcxproj
        echo '### install ###'
        mkdir '${{github.workspace}}/3rdparty/freetype-vc17-x64-release/lib'
        mkdir '${{github.workspace}}/3rdparty/freetype-vc17-x64-release/bin'
        cp -Path './freetype/include'                       -Destination '${{github.workspace}}/3rdparty/freetype-vc17-x64-release' -Recurse
        cp -Path './freetype/objs/x64/Release/freetype.dll' -Destination "${{github.workspace}}/3rdparty/freetype-vc17-x64-release/bin"
        cp -Path './freetype/objs/x64/Release/freetype.lib' -Destination '${{github.workspace}}/3rdparty/freetype-vc17-x64-release/lib'
        tree '${{github.workspace}}/3rdparty' /f /a
      shell: pwsh 
        
