name: compress
description: 'Compress resulting file form the build depending on os'

inputs:
  shell_type:
    description: 'Shell type'
    required: true
    default: 'bash'
  release_dir:
    description: 'Build catalogue'
    required: true
    default: '/build'
  bin_dir:
    description: 'Binaries catalogue'
    required: true
    default: '/lin64/'
  compress:
    description: 'Compress command'
    required: true
    default: 'tar -czvf'
  compress_ext:
    description: 'Compress extension'
    required: true
    default: 'UnixMake.tar.gz'
  os:
    description: 'Operating system'
    required: true
    default: 'ubuntu-latest'

runs:
  using: "composite"
  steps:

    - name: Linux & MacOS Compress Artefacts
      if: matrix.cmake_generator == 'Unix Makefiles'
      run: |
          cd '${{ github.workspace }}${{ inputs.release_dir }}'
          ls
          set -x
          ${{ inputs.compress}} OCCTbuild_${{ inputs.os }}_${{ inputs.compress_ext}} /include/ ${{ inputs.bin_dir }} \
          /usr/local/include/freetype2/ /usr/local/include/*tcl* /usr/local/include/*tk* \
          /usr/local/lib/*freetype* /usr/local/lib/*tcl*  /usr/local/lib/*tk*
      shell: ${{ inputs.shell_type }}

    - name: MinGW Compress Artefacts
      if: matrix.cmake_generator == 'MinGW Makefiles'
      run: |
          cd '${{ github.workspace }}${{ inputs.release_dir }}'
          ls
          Set-PSDebug -Trace 1
          ${{ inputs.compress}} OCCTbuild_${{ inputs.os }}_${{ inputs.compress_ext}} /include/ ${{ inputs.bin_dir }} `
          'D:\a\_temp\msys64\mingw64\include\freetype2\' `
          'D:\a\_temp\msys64\mingw64\lib\'
      shell: ${{ inputs.shell_type }}

    - name: VS17 Compress Artefacts
      if: matrix.cmake_generator == 'VS17'
      run: |
          cd '${{ github.workspace }}${{ inputs.release_dir }}'
          ls
          Set-PSDebug -Trace 1
          ${{ inputs.compress}} OCCTbuild_${{ inputs.os }}_${{ inputs.compress_ext}} /include/ ${{ inputs.bin_dir }} '${{github.workspace}}/dep/'
      shell: ${{ inputs.shell_type }}

          

        
