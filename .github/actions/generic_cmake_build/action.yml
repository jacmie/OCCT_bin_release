name: generic_cmake_build
description: 'Build on particular system'

inputs:
  shell_type:
    description: 'Shell type'
    required: true
    default: 'bash'
  project_dir:
    description: 'Project directory with sources'
    required: true
    default: ${{github.workspace}}
  build_type:
    description: 'Build type'
    required: true
    default: 'Debug'
  dependency:
    description: '3rdPart dependencies dir'
    required: true
    default: '/usr/local'
  cmake_generator:
    description: 'Makefile generator used by CMake'
    required: true
    default: 'Unix Makefiles'
  parallel:
    description: 'Number of threads for parallel run'
    required: true
    default:  1
  tests_flag:
    description: 'Run tests flag'
    required: true
    default:  true

runs:
  using: "composite"
  steps:

    # Needs first: actions/checkout@v3
    
    - name: Download Tcl/Tk
      run: |
        echo '### download ###'
        cd '${{github.workspace}}/3rdparty'
        Invoke-WebRequest -Uri 'https://dev.opencascade.org/system/files/occt/3rdparty/tcltk-86-32.zip' -outfile './tcltk.zip'
        echo '### unzip ###'
        7z x 'tcltk.zip'
        tree '${{github.workspace}}/3rdparty' /f /a
      shell: ${{ inputs.shell_type }}
    
    - name: Configure CMake
      run: |
        echo '${{ inputs.dependency }}'
        cmake -G "${{ inputs.cmake_generator }}" -B ${{inputs.project_dir}}/build -DCMAKE_BUILD_TYPE=${{ inputs.build_type }} `
        -D3RDPARTY_TCL_DIR='${{github.workspace}}/3rdparty/tcltk-86-32' -D3RDPARTY_TK_DIR='${{github.workspace}}/3rdparty/tcltk-86-32' `
        -D3RDPARTY_FREETYPE_DIR='${{github.workspace}}/3rdparty/freetype-vc17-x64-release' 
#       -D3RDPARTY_TCL_INCLUDE_DIR='${{github.workspace}}/3rdparty/tcltk-vc17-x64-release/include' -D3RDPARTY_TK_INCLUDE_DIR='${{github.workspace}}/3rdparty/tcltk-vc17-x64-release/include' `
#       -D3RDPARTY_TCL_LIBRARY_DIR='${{github.workspace}}/3rdparty/tcltk-vc17-x64-release/lib' `
#       -D3RDPARTY_TCL_LIBRARY='${{github.workspace}}/3rdparty/tcltk-vc17-x64-release/lib/tcl90.lib' -D3RDPARTY_TK_LIBRARY='${{github.workspace}}/3rdparty/tcltk-vc17-x64-release/tcl9tk87.lib' `
#       -D3RDPARTY_TCL_DLL_DIR='${{github.workspace}}/3rdparty/tcltk-vc17-x64-release/bin' ` 
#       -D3RDPARTY_TCL_DLL='${{github.workspace}}/3rdparty/tcltk-vc17-x64-release/bin/tcl90.dll' -D3RDPARTY_TK_DLL='${{github.workspace}}/3rdparty/tcltk-vc17-x64-release/bin/tcl9tk87.dll' 
      shell: ${{ inputs.shell_type }}

#   - name: Configure CMake
#     run: |
#       echo '${{ inputs.dependency }}'
#       cmake -G "${{ inputs.cmake_generator }}" -B ${{inputs.project_dir}}/build -DCMAKE_BUILD_TYPE=${{ inputs.build_type }} `
#       -D3RDPARTY_FREETYPE_DIR='${{github.workspace}}/3rdparty/freetype-vc17-x64-release' `
#       -D3RDPARTY_TCL_INCLUDE_DIR='${{github.workspace}}/3rdparty/tcltk-vc17-x64-release/include' -D3RDPARTY_TK_INCLUDE_DIR='${{github.workspace}}/3rdparty/tcltk-vc17-x64-release/include' `
#       -D3RDPARTY_TCL_LIBRARY_DIR='${{github.workspace}}/3rdparty/tcltk-vc17-x64-release/lib' `
#       -D3RDPARTY_TCL_LIBRARY='${{github.workspace}}/3rdparty/tcltk-vc17-x64-release/lib/tcl90.lib' -D3RDPARTY_TK_LIBRARY='${{github.workspace}}/3rdparty/tcltk-vc17-x64-release/tcl9tk87.lib' `
#       -D3RDPARTY_TCL_DLL_DIR='${{github.workspace}}/3rdparty/tcltk-vc17-x64-release/bin' ` 
#       -D3RDPARTY_TCL_DLL='${{github.workspace}}/3rdparty/tcltk-vc17-x64-release/bin/tcl90.dll' -D3RDPARTY_TK_DLL='${{github.workspace}}/3rdparty/tcltk-vc17-x64-release/bin/tcl9tk87.dll' 
#     shell: ${{ inputs.shell_type }}

#        -D3RDPARTY_DIR='${{github.workspace}}/3rdparty' `
#       -D3RDPARTY_TCL_DIR='${{github.workspace}}/3rdparty/tcltk-vc17-x64-release' -D3RDPARTY_TK_DIR='${{github.workspace}}/3rdparty/tcltk-vc17-x64-release' `
#       -D3RDPARTY_TCL_DIR='${{github.workspace}}/3rdparty/tcl-vc17-x64-release' -D3RDPARTY_TK_DIR='${{github.workspace}}/3rdparty/tk-vc17-x64-release' `
#        -D3RDPARTY_FREETYPE_LIBRARY_DIR='${{github.workspace}}/3rdparty/freetype-vc17-x64-release/lib' `
#        -D3RDPARTY_FREETYPE_DLL_DIR='${{github.workspace}}/3rdparty/freetype-vc17-x64-release/bin'
#       -D3RDPARTY_FREETYPE_INCLUDE_DIR='${{github.workspace}}/3rdparty/freetype-vc17-x64-release/include' `
#
    - run: cat D:/a/OCCT_bin_release/OCCT_bin_release/build/CMakeFiles/CMakeOutput.log
      shell: bash

    - name: Build
      run: cmake --build ${{inputs.project_dir}}/build -j ${{ inputs.parallel }} --config ${{ inputs.build_type }}
      shell: ${{ inputs.shell_type }}

#   - name: Test
#     if: ${{ inputs.tests_flag == 'true' }}
#     working-directory: ${{inputs.project_dir}}/build
#     run: ctest -C ${{ inputs.build_type }}
#     shell: ${{ inputs.shell_type }}

#        cmake -G "${{ inputs.cmake_generator }}" -B ${{inputs.project_dir}}/build -DCMAKE_BUILD_TYPE=${{ inputs.build_type }} -D3RDPARTY_TCL_INCLUDE_DIR='${{github.workspace}}/dep/include' -D3RDPARTY_TK_INCLUDE_DIR='${{github.workspace}}/dep/include' -D3RDPARTY_FREETYPE_INCLUDE_DIR='${{github.workspace}}/dep/include' -D3RDPARTY_TCL_LIBRARY_DIR='${{github.workspace}}/dep/lib' -D3RDPARTY_TK_LIBRARY_DIR='${{github.workspace}}/dep/lib' -D3RDPARTY_FREETYPE_LIBRARY_DIR='${{github.workspace}}/dep/lib' -D3RDPARTY_TCL_DLL_DIR='${{github.workspace}}/dep/lib' -D3RDPARTY_TK_DLL_DIR='${{github.workspace}}/dep/lib' -D3RDPARTY_FREETYPE_DLL_DIR='${{github.workspace}}/dep/lib'
